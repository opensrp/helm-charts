# Default values for ihris.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ihris/ihris
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "03a377ab604bf6c6e0593c72b650f3f2b6da1935"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

commonLabels: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ihris.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

initContainerConfig:
  hapiFhirConfig:
    enable: false
    image: ihris/upload-definitions:a1cdd79
    command: "./hapi-fhir-cli upload-definitions -t {{ .Values.hapiFhirServerConfiguration.scheme }}://{{ .Values.hapiFhirServerConfiguration.host }}:{{ .Values.hapiFhirServerConfiguration.port }}/fhir -v {{ .Values.hapiFhirServerConfiguration.version }}"

  ihirsConfig:
    enable: false
    image: ihris/ihris-config:8770136a592f7743e6478d2320550705f475304f
    command: "sushi /src/ig -s . && node load.js --server {{ .Values.hapiFhirServerConfiguration.scheme }}://{{ .Values.hapiFhirServerConfiguration.host }}:{{ .Values.hapiFhirServerConfiguration.port }}/fhir
    /src/ig/fsh-generated/resources/Basic*.json
    /src/ig/fsh-generated/resources/CodeSystem*.json
    /src/ig/fsh-generated/resources/Parameters*.json
    /src/ig/fsh-generated/resources/StructureDefinition*.json
    /src/ig/fsh-generated/resources/DocumentReference*.json
    /src/ig/fsh-generated/resources/Library*.json
    /src/ig/fsh-generated/resources/Person*.json
    /src/ig/fsh-generated/resources/ValueSet*.json
    /src/resources/Basic*.json
    /src/resources/CodeSystem*.json
    /src/resources/Library*.json
    /src/resources/Parameters*.json
    /src/resources/Person*.json
    /src/resources/ValueSet*.json
    /src/resources/SearchParameter*.json"

  ihirsData:
    enable: false
    image: ihris/ihris-data:302967f

hapiFhirServerConfiguration:
  host: ""
  scheme: "https"
  port: 8080
  username: "hapi"
  password: "hapi"
  version: "r4"

# Elastic Search configurations
esConfiguration:
  scheme: "http"
  host: ""
  port: 9200

redis:
  host: ""

# Kibana configurations for elastic search
kibana:
  host: ""
  scheme: "http"
  port: 5601

vpa:
  enabled: true
  updatePolicy:
    updateMode: "Off"
  resourcePolicy: {}

pdb:
  enabled: false
  minAvailable: ""
  maxUnavailable: 1
