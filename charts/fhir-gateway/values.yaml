replicaCount: 1

image:
  repository: onaio/fhir-gateway-plugin
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.0.13"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: fhir-gateway.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

recreatePodsWhenConfigMapChange: true

livenessProbe:
  httpGet:
    path: /fhir/.well-known/smart-configuration
    port: http

readinessProbe:
  httpGet:
    path: /fhir/.well-known/smart-configuration
    port: http

initContainers:

volumes:
#  - name: hapi-page-url-allowed-queries
#    configMap:
#      name: '{{ include "fhir-gateway.fullname" . }}'


volumeMounts:
#  - mountPath: /app/resources/hapi_page_url_allowed_queries.json
#    name: hapi-page-url-allowed-queries
#    subPath: hapi_page_url_allowed_queries.json

configMaps:
#  - name: hapi_page_url_allowed_queries.json
#    contents: |
#      {
#      "entries": [
#          {
#            "path": "",
#            "queryParams": {
#              "_getpages": "ANY_VALUE"
#            },
#            "allowExtraParams": true,
#            "allParamsRequired": true,
#          }
#        ]
#      }

env:
  - name: PROXY_TO
    value: https://example.com/fhir
  - name: TOKEN_ISSUER
    value: http://localhost:9080/auth/realms/test-smart
  - name: ACCESS_CHECKER
    value: list
  - name: ALLOWED_QUERIES_FILE
    value: resources/hapi_page_url_allowed_queries.json
  - name: BACKEND_TYPE
    value: HAPI
  - name: RUN_MODE
    value: PROD

pdb:
  enabled: false
  minAvailable: ""
  maxUnavailable: 1

# Add the spring configuration below check https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.properties-and-configuration.
applicationConfig:
#  server:
#    max-http-header-size: 40KB
#  spring:
#  sentry:
#    dsn:
#    debug: false
#    release:  "{{ .Values.image.tag }}"
#    environment: staging
#    tags:
#      release-name: "{{ .Release.Name }}"
#      release-namespace: "{{ .Release.Namespace }}"

vpa:
  enabled: false
  updatePolicy:
    updateMode: "Off"
  resourcePolicy: {}
